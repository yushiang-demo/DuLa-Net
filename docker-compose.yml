version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./assets:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  redis:
    image: redis:latest

  server:
    build:
      dockerfile: Dockerfile
    command: python server.py
    volumes:
      - ./:/app
    depends_on:
      - redis


  worker:
    build:
      dockerfile: Dockerfile
    command: celery -A tasks worker --loglevel=info
    volumes:
      - ./:/app
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  flower:
    build:
      dockerfile: Dockerfile
    command: celery -A tasks flower
    ports:
      - 5555:5555
    volumes:
      - ./:/app
    depends_on:
      - worker
      - redis

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_SITE_BASEURL: /mongoadmin
    depends_on:
      - mongo